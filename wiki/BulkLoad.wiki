#summary Use the Bulk Loader facility of App Engine to upload your zipcode.csv file

= Introduction =

The zipcode.csv file, [http://www.boutell.com/zipcodes/ freely available], has been altered slightly, for use with Moveable Weather. An extra field, called `has_location` has been added to the end of each line. Initially, the value of this field is set to `0` for each line. After you upload the `zipcode.csv` file, you will need to loop through each record in this data, calling a special method called `update_location`. The purpose of this method, inherited from the `GeoName` class, is to ensure that each latitude/longitude pair is stored in a _geohash_. This will enable _proximity searches_, which are critical.

The reason proximity searches are necessary is that each zip code in the database is associated with a partilar latitude/longitude pair which we can thing of as occupying the center of the particular zip code. But data about a user's location, coming in via Google Latitude, will be arbitrary, and thus, we'll need to be able to compute which zip code's "neighborhood" it falls withing. This is what a proximity search is.

= Details =

Here are the steps to use bulk upload to upload the zip code data.

  # From the  `app` directory, issue the command:
{{{
     make upload
}}}
   This will cause all your zip code today to be uploaded, and may take an hour or so.

  # There is also a _make_ target called _fill_, which you can use to call `upload_location` on batches of zip codes. You'll have to invoke this url in batches of 100 or so, so that App Engine doesn't time out
  # In the shell, perform the following loop, on the fly, until the output indicates that rows of data are no longer being processed:

 {{{
        while (1)
            make fill LIMIT=100
 }}}